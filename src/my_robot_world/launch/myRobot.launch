<?xml version="1.0"?>
<launch>
  <arg name="model" default="$(find my_robot_world)/urdf/myRobot.urdf.xacro"/>
  <arg name="product_fpath" default="$(find my_robot_world)/urdf/product.urdf.xacro" />
  <arg name="rvizconfig" default="$(find my_robot_world)/rviz/myRobot.rviz" />
  <arg name="world" default="$(find my_robot_world)/worlds/empty_world.world" />
  <arg name="limited" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="sim" default="true"/>
  
  <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
    	<arg name="gui" value="$(arg gui)" />
    	<arg name="use_sim_time" value="true" />
    	<arg name="world_name" value="$(arg world)" />
    	<arg name="paused" value="$(arg paused)" />
  </include>
  
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <param name="product_path" type="str" value="$(arg product_fpath)"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="contact_sensor_service" pkg="my_robot_world"  type="contact_sensor.py" />
  <node name="products_spawner" pkg="my_robot_world" type="product_spawner.py" />
  <node name="moveit_robot" pkg="my_robot_world" type="robot.py" output="screen" />
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />
    
  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_robot_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" />
  

  <!-- spawn the conveyor_belts in gazebo -->
  <node name="spawn_conveyor_belt_pallet" pkg="gazebo_ros" type="spawn_model" args="-file $(find my_robot_world)/urdf/conveyorbelt_pallet.urdf.xacro -urdf -model conveyor_belt_pallet" />
  <node name="spawn_conveyor_belt_product" pkg="gazebo_ros" type="spawn_model" args="-file $(find my_robot_world)/urdf/conveyorbelt_product.urdf.xacro -urdf -model conveyor_belt_product" />
    <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />
  
  <!-- joint_state_controller -->
  <rosparam file="$(find ur_gazebo)/controller/joint_state_controller.yaml" command="load"/>
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

  <!-- start this controller -->
  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur10.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- load other controllers -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" />

  <!--  load gripper-->
  <node name="static_transform_publisher" pkg="tf" type="static_transform_publisher" args="0.0 0.0 0.2 0.0 1.0 0.0 0.0 wrist_3_link gripper 1000" />

  <!-- Controller launch  -->
  <include file="$(find ur10_moveit_config)/launch/ur10_moveit_planning_execution.launch"></include>

</launch>
